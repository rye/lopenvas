---
version: '3.7'

services:
  redis:
    image: docker.io/redis:alpine
    command: "/etc/redis.conf"
    networks:
    - internal
    restart: unless-stopped
    volumes:
    - ./redis.conf:/etc/redis.conf:ro
    - type: volume
      source: redis-data
      target: /data
    - type: volume
      source: redis-socket
      target: /tmp/redis

  postgres:
    image: lopenvas-postgres:latest
    restart: unless-stopped
    networks:
    - internal
    environment:
      POSTGRES_DB: gvmd
      POSTGRES_USER: root
    volumes:
    - ./bin/gvmd/gvmd_tweaks.sql:/docker-entrypoint-initdb.d/0000_setup-gvmd.sql:ro
    - type: volume
      source: postgres-data
      target: /var/lib/postgresql/data
    - type: volume
      source: postgres-socket
      target: /var/run/postgresql

  scanner:
    image: lopenvas-openvas:latest
    restart: unless-stopped
    depends_on:
    - sync
    - redis
    networks:
    - internal
    - scanning
    volumes:
    - ./openvassd.conf:/usr/local/etc/openvas/openvassd.conf:ro
    - type: volume
      source: usr-local-var-run
      target: /usr/local/var/run
    - type: volume
      source: redis-socket
      target: /tmp/redis
    - type: volume
      source: openvas-data
      target: /usr/local/var/lib/openvas/plugins

  gvmd:
    image: lopenvas-gvmd:latest
    restart: unless-stopped
    depends_on:
    - scanner
    - postgres
    networks:
    - internal
    volumes:
    - ./gvmd_log.conf:/usr/local/etc/gvm/gvmd_log.conf:ro
    - type: volume
      source: postgres-socket
      target: /var/run/postgresql
    - type: volume
      source: usr-local-var-run
      target: /usr/local/var/run
    - type: volume
      source: gvm-data
      target: /usr/local/var/lib/gvm
    - type: volume
      source: openvas-data
      target: /usr/local/var/lib/openvas/plugins

  gsad:
    image: lopenvas-gsad:latest
    restart: unless-stopped
    depends_on:
    - gvmd
    networks:
    - default
    - internal
    ports:
    - 127.0.0.1:80:80
    - 127.0.0.1:443:443
    volumes:
    - ./CA/servercert.pem:/usr/local/var/lib/gvm/CA/servercert.pem:ro
    - ./CA/serverkey.pem:/usr/local/var/lib/gvm/private/CA/serverkey.pem:ro
    - type: volume
      source: usr-local-var-run
      target: /usr/local/var/run

  # This container is a one-off thing that synchronizes cert data.
  #
  # It calls the `greenbone-nvt-sync`, `greenbone-scapdata-sync`, and
  # `greenbone-certdata-sync` commands, and can be called on a schedule.
  sync:
    image: lopenvas-sync:latest
    volumes:
    - type: volume
      source: openvas-data
      target: /usr/local/var/lib/openvas/plugins

networks:
  # The default network is a bridge that connects containers to the outside
  # world.  This is used for ingress.
  default:

  # The internal network is used solely for container-container communication,
  # and is sandboxed by the `{ internal: true }` configuration here.
  # Only those containers which are attached to this network will be able to
  # communicate with the outside world.
  internal:
    internal: true

  scanning:

volumes:
  postgres-data:
  postgres-socket:
    driver_opts:
      type: tmpfs
      device: tmpfs
  redis-data:
  redis-socket:
    driver_opts:
      type: tmpfs
      device: tmpfs
  usr-local-var-run:
    driver_opts:
      type: tmpfs
      device: tmpfs
  gvm-data:
  openvas-data:
